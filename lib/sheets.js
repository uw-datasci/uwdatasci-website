import { GoogleSpreadsheet } from "google-spreadsheet";
import { JWT } from "google-auth-library";
import creds from "./config/uwdsc-website-9431713d138a.json";

// Initialize auth - see https://theoephraim.github.io/node-google-spreadsheet/#/guides/authentication
const serviceAccountAuth = new JWT({
  // env var values here are copied from service account credentials generated by google
  // see "Authentication" section in docs for more info
  email: creds.client_email,
  key: creds.private_key,
  scopes: ["https://www.googleapis.com/auth/spreadsheets"],
});

const doc = new GoogleSpreadsheet(
  creds.sheet_id,
  serviceAccountAuth
);

const ARR_COLS = ["sm_sbert", "xs_sbert", "sm_tfidf", "xs_tfidf"];
const NULL_COLS = ["liked", "easy", "useful", "antireqs"];

export async function getCourses() {
  await doc.loadInfo();
  const sheet = doc.sheetsByIndex[0];
  const rows = await sheet.getRows({ limit: 1000 });
  const rowObjs = rows.map((a) => {
    const rowObj = a.toObject();
    ARR_COLS.forEach(col => {
        rowObj[col] = rowObj[col].split(",").map(Number);
    })
    NULL_COLS.forEach(col => {
        if (typeof rowObj[col] === "undefined") {
            rowObj[col] = null;
        }
    })
    return rowObj;
  });
  return rowObjs;
}
